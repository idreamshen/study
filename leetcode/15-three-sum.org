Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:
#+begin_example
Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
#+end_example

* 暴力解
#+begin_src java :classname ThreeSum :cmdline "-cp ." :exports both :results output
  import java.util.Set;
  import java.util.HashSet;
  import java.util.List;
  import java.util.ArrayList;
  import java.util.Arrays;

  class ThreeSum {
      public static void main(String[] args) {
          System.out.println("Input: [-1, 0, 1, 2, -1, -4]. Output: " + solution(new int[] {-1,0,1,2,-1,-4}));
      }

      static Set<List<Integer>> solution(int[] nums) {
          Arrays.sort(nums);

          Set<List<Integer>> result = new HashSet<>();

          for (int i = 0; i < nums.length; i++) {
              for (int j = i + 1; j < nums.length; j++) {
                  if (j >= nums.length) break;
                  for (int k = j + 1; k < nums.length; k++) {
                      if (k >= nums.length) break;
                      if (nums[i] + nums[j] + nums[k] == 0) {
                          List<Integer> line = new ArrayList<>();
                          line.add(nums[i]);
                          line.add(nums[j]);
                          line.add(nums[k]);
                          result.add(line);
                      }
                  }
              }
          }

          return result;
      }
  }
#+end_src

#+RESULTS:
: Input: [-1, 0, 1, 2, -1, -4]. Output: [[-1, -1, 2], [-1, 0, 1]]
