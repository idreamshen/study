#+TITLE: JVM GC

* 定义
垃圾收集 Garbage Collection 简称为 GC。内存垃圾回收主要集中于 Java 堆和方法区中。

* 对象存活判断
两种方式
1. 引用计数
2. 可达性分析（Reachability Analysis）

GC Roots
1. 虚拟机栈中引用的对象
2. 方法区中类静态属性实体引用的对象
3. 方法区中常量引用的对象
4. 本地方法栈中JNI引用的对象

* 垃圾收集算法
1. 标记-清除算法
2. 复制算法
3. 标记-压缩算法
4. 分代收集算法

* 垃圾收集器分类
** 分类
|------------------+--------+------------+-------------------|
| Young Generation | Serial | ParNew     | Parallel Scavenge |
|------------------+--------+------------+-------------------|
| Old Generation   | CMS    | Serial Old | Parallel Old      |
|------------------+--------+------------+-------------------|

** 组合
|-------------------+----------------|
| Young Generation  | Old Generation |
|-------------------+----------------|
| Serial            | CMS            |
| Serial            | Serial Old     |
| ParNew            | CMS            |
| ParNew            | Serial Old     |
| Parallel Scavenge | Serial Old     |
| Parallel Scavenge | Parallel Old   |
|-------------------+----------------|

* 垃圾收集器命令参数对照
|-------------------------+----------------------------------|
| Command Line Flag       | Garbage Collectors               |
|-------------------------+----------------------------------|
| -XX:+UseSerialGC        | Serial + Serial Old              |
| -XX:+UseParNewGC        | ParNew + Serial Old              |
| -XX:+UseConcMarkSweepGC | ParNew + CMS + Serial Old        |
| -XX:+UseParallelGC      | Parallel Scavenge + Serial Old   |
| -XX:+UseParallelOldGC   | Parallel Scavenge + Parallel Old |
|-------------------------+----------------------------------|

* JDK 8 默认垃圾收集器参数
=-XX:+UseParallelGC=
#+begin_src sh :exports both
  java -XX:+PrintCommandLineFlags -version
#+end_src

#+RESULTS:
: -XX:InitialHeapSize=268435456 -XX:MaxHeapSize=4294967296 -XX:+PrintCommandLineFlags -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseParallelGC


* 参考资料
- [[https://www.cnblogs.com/ityouknow/p/5614961.html][jvm系列(三):java GC算法 垃圾收集器]]
- [[https://my.oschina.net/hosee/blog/644085][JVM 垃圾回收机制]]
- [[http://bigdataer.net/?p=474][Conflicting collector combinations in option list]]
- [[https://blogs.oracle.com/jonthecollector/our-collectors][Our Collectors]]
