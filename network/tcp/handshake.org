* TCP 状态图
#+begin_src example
                                      
                              +---------+ ---------\      active OPEN  
                              |  CLOSED |            \    -----------  
                              +---------+<---------\   \   create TCB  
                                |     ^              \   \  snd SYN    
                   passive OPEN |     |   CLOSE        \   \           
                   ------------ |     | ----------       \   \         
                    create TCB  |     | delete TCB         \   \       
                                V     |                      \   \     
                              +---------+            CLOSE    |    \   
                              |  LISTEN |          ---------- |     |  
                              +---------+          delete TCB |     |  
                   rcv SYN      |     |     SEND              |     |  
                  -----------   |     |    -------            |     V  
 +---------+      snd SYN,ACK  /       \   snd SYN          +---------+
 |         |<-----------------           ------------------>|         |
 |   SYN   |                    rcv SYN                     |   SYN   |
 |   RCVD  |<-----------------------------------------------|   SENT  |
 |         |                    snd ACK                     |         |
 |         |------------------           -------------------|         |
 +---------+   rcv ACK of SYN  \       /  rcv SYN,ACK       +---------+
   |           --------------   |     |   -----------                  
   |                  x         |     |     snd ACK                    
   |                            V     V                                
   |  CLOSE                   +---------+                              
   | -------                  |  ESTAB  |                              
   | snd FIN                  +---------+                              
   |                   CLOSE    |     |    rcv FIN                     
   V                  -------   |     |    -------                     
 +---------+          snd FIN  /       \   snd ACK          +---------+
 |  FIN    |<-----------------           ------------------>|  CLOSE  |
 | WAIT-1  |------------------                              |   WAIT  |
 +---------+          rcv FIN  \                            +---------+
   | rcv ACK of FIN   -------   |                            CLOSE  |  
   | --------------   snd ACK   |                           ------- |  
   V        x                   V                           snd FIN V  
 +---------+                  +---------+                   +---------+
 |FINWAIT-2|                  | CLOSING |                   | LAST-ACK|
 +---------+                  +---------+                   +---------+
   |                rcv ACK of FIN |                 rcv ACK of FIN |  
   |  rcv FIN       -------------- |    Timeout=2MSL -------------- |  
   |  -------              x       V    ------------        x       V  
    \ snd ACK                 +---------+ delete TCB        +---------+
     ------------------------>|TIME WAIT|------------------>| CLOSED  |
                              +---------+                   +---------+
#+end_src

* 三次握手
#+begin_src example
      TCP A                                                TCP B

  1.  CLOSED                                               LISTEN

  2.  SYN-SENT    --> <SEQ=100><CTL=SYN>               --> SYN-RECEIVED

  3.  ESTABLISHED <-- <SEQ=300><ACK=101><CTL=SYN,ACK>  <-- SYN-RECEIVED

  4.  ESTABLISHED --> <SEQ=101><ACK=301><CTL=ACK>       --> ESTABLISHED

  5.  ESTABLISHED --> <SEQ=101><ACK=301><CTL=ACK><DATA> --> ESTABLISHED
#+end_src

1. ~TCP A~ 处于关闭状态， ~TCP B~ 处于监听状态
2. ~TCP A~ 发送 SYN 包，并将 ~TCP A~ 自己的 SEQ 序号告诉 ~TCP B~
3. ~TCP B~ 返回 SYN ACK 包，并将 ~TCP B~ 自己的序号告诉 ~TCP A~，同时 ACK 设置为第二步中 ACK + 1
4. ~TCP A~ 发送 ACK 包，SEQ 设置为第2步中的 SEQ + 1，同时 ACK 设置为第三步中的 SEQ + 1。至此，三次握手完成

* 使用 tcpdump 分析
使用 =tcpdump= 分析与 www.baidu.com 连接时的三次握手

进行连接建立
#+name: tcpdump
#+begin_src sh :dir /sudo:: :results output :exports both
  tcpdump dst host www.baidu.com or src host www.baidu.com -c 3 -S -n & telnet www.baidu.com 443 << EOF
  quit
  EOF
  echo
#+end_src

抓包结果
#+RESULTS: tcpdump
: Trying 180.101.49.11...
: 14:45:23.532094 IP 172.17.0.177.54997 > 180.101.49.11.443: Flags [S], seq 887424618, win 65535, options [mss 1460,nop,wscale 6,nop,nop,TS val 839074546 ecr 0,sackOK,eol], length 0
: 14:45:23.547286 IP 180.101.49.11.443 > 172.17.0.177.54997: Flags [S.], seq 1198268201, ack 887424619, win 8192, options [mss 1412,nop,wscale 5,nop,nop,nop,nop,nop,nop,nop,nop,nop,nop,nop,nop,sackOK,eol], length 0
: 14:45:23.547339 IP 172.17.0.177.54997 > 180.101.49.11.443: Flags [.], ack 1198268202, win 4096, length 0
: Connected to www.a.shifen.com.
: Escape character is '^]'.
: 


* 参考资料
- [[https://draveness.me/whys-the-design-tcp-three-way-handshake/][为什么 TCP 建立连接需要三次握手]]
- [[https://tools.ietf.org/html/rfc793][TRANSMISSION CONTROL PROTOCOL]]


